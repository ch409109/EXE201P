@page
@model ClickCart.Pages.Products.DetailsModel
@{
    Layout = "_UserLayout";
    ViewData["Title"] = Model.Product?.ProductName ?? "Chi tiết sản phẩm";
}

<section class="product-details">
    <div class="container">
        @if (Model.Product != null)
        {
            <div class="product-container">
                <!-- Ảnh sản phẩm -->
                <div class="product-gallery">
                    <div class="main-image">
                        <img src="/common/images/products/@Model.Product.ImageUrl"
                             alt="@Model.Product.ProductName"
                             class="product-img" />
                    </div>
                </div>

                <!-- Thông tin sản phẩm -->
                <div class="product-info">
                    <div class="product-header">
                        <h1 class="product-title">@Model.Product.ProductName</h1>
                        <div class="category">
                            <span class="category-label">Danh mục:</span>
                            <span class="category-tag">@Model.Product.Category?.CategoryName</span>
                        </div>
                    </div>

                    @if (Model.Product.IsAlcoholic)
                    {
                        <div class="warning-alert">
                            <i class="fa fa-exclamation-triangle"></i>
                            <span>Sản phẩm có cồn - Không bán cho người dưới 18 tuổi</span>
                        </div>
                    }

                    <div class="product-description">
                        <h5>Mô tả sản phẩm</h5>
                        <p>@Model.Product.Description</p>
                    </div>

                    <div class="product-price">
                        <span class="price-amount">@String.Format("{0:N0} VND", Model.Product.Price)</span>
                    </div>

                    <!-- Thay đổi form trong Details.cshtml -->
                    <form id="addToCartForm" class="purchase-form">
                        <input type="hidden" name="ProductID" value="@Model.Product.ProductID" />
                        <div class="quantity-control">
                            <label for="quantity">Số lượng:</label>
                            <div class="quantity-wrapper">
                                <button type="button" class="quantity-btn" onclick="decrementQuantity()">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <input type="number"
                                       class="quantity-input"
                                       id="quantity"
                                       name="Quantity"
                                       value="1"
                                       min="1"
                                       max="99" />
                                <button type="button" class="quantity-btn" onclick="incrementQuantity()">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                        <button type="submit" class="add-to-cart-btn">
                            <i class="fa fa-shopping-cart"></i>
                            <span>Thêm vào giỏ hàng</span>
                        </button>
                    </form>

                </div>
            </div>
        }
        else
        {
            <div class="error-message">
                <i class="fa fa-exclamation-circle"></i>
                <span>Không tìm thấy sản phẩm</span>
            </div>
        }
    </div>
</section>

<!-- Sản phẩm tương tự -->
@if (Model.RelatedProducts != null && Model.RelatedProducts.Any())
{
    <div class="related-products">
        <h2 class="related-title">Sản phẩm tương tự</h2>
        <div class="related-products-grid">
            @foreach (var relatedProduct in Model.RelatedProducts)
            {
                <div class="related-product-card">
                    <a asp-page="./Details" asp-route-id="@relatedProduct.ProductID">
                        <div class="related-product-image">
                            <img src="/common/images/products/@relatedProduct.ImageUrl"
                                 alt="@relatedProduct.ProductName" />
                        </div>
                        <div class="related-product-info">
                            <h3 class="related-product-name">@relatedProduct.ProductName</h3>
                            <p class="related-product-price">@String.Format("{0:N0} VND", relatedProduct.Price)</p>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
}

<style>
    .product-details {
        padding: 2rem 0;
        background-color: #f8f9fa;
    }

    .product-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        max-width: 1200px;
        margin: 0 auto;
    }

    .product-gallery {
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .main-image {
        position: relative;
        padding-top: 100%;
        overflow: hidden;
    }

    .product-img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 1rem;
    }

    .product-info {
        background: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .product-header {
        margin-bottom: 1.5rem;
    }

    .product-title {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2d3436;
        margin-bottom: 1rem;
        line-height: 1.3;
    }

    .category {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .category-label {
        color: #636e72;
        font-size: 0.9rem;
    }

    .category-tag {
        background: #e3f2fd;
        color: #1976d2;
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .warning-alert {
        background: #fff3cd;
        color: #856404;
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .product-description {
        margin-bottom: 1.5rem;
    }

        .product-description h5 {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2d3436;
            margin-bottom: 0.5rem;
        }

        .product-description p {
            color: #636e72;
            line-height: 1.6;
        }

    .product-price {
        margin-bottom: 1.5rem;
    }

    .price-amount {
        font-size: 1.8rem;
        font-weight: 700;
        color: #2d3436;
    }

    .purchase-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .quantity-control {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        .quantity-control label {
            font-weight: 500;
            color: #2d3436;
        }

    .quantity-wrapper {
        display: flex;
        align-items: center;
        max-width: 123px;
        border: 1px solid #dfe6e9;
        border-radius: 8px;
        overflow: hidden;
    }

    .quantity-btn {
        background: #f8f9fa;
        border: none;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .quantity-btn:hover {
            background: #e9ecef;
        }

    .quantity-input {
        width: 60px;
        text-align: center;
        border: none;
        border-left: 1px solid #dfe6e9;
        border-right: 1px solid #dfe6e9;
        padding: 0.5rem;
        font-size: 1rem;
    }

        .quantity-input::-webkit-inner-spin-button,
        .quantity-input::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

    .add-to-cart-btn {
        background: #1976d2;
        color: white;
        border: none;
        padding: 1rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .add-to-cart-btn:hover {
            background: #1565c0;
        }

    .error-message {
        background: #fee2e2;
        color: #dc2626;
        padding: 1rem;
        border-radius: 8px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        max-width: 400px;
        margin: 2rem auto;
    }

    @@media (max-width: 768px) {
        .product-details {
            padding: 1rem;
        }

        .product-container {
            grid-template-columns: 1fr;
        }

        .product-title {
            font-size: 1.5rem;
        }

        .price-amount {
            font-size: 1.5rem;
        }
    }

    .related-products {
        margin-top: 3rem;
        padding: 2rem;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        /* Thêm thuộc tính này */
        width: 100%;
    }

    .related-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #2d3436;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .related-products-grid {
        display: grid;
        /* Sửa lại grid-template-columns cố định 4 cột bằng nhau */
        grid-template-columns: repeat(4, 1fr);
        gap: 1.5rem;
        /* Thêm các thuộc tính này */
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        justify-content: center;
    }

    .related-product-card {
        background: #f8f9fa;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .related-product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .related-product-card a {
            text-decoration: none;
            color: inherit;
        }

    .related-product-image {
        position: relative;
        padding-top: 100%;
        background: #fff;
    }

        .related-product-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: contain;
            padding: 0.5rem;
        }

    .related-product-info {
        padding: 1rem;
    }

    .related-product-name {
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: #2d3436;
        /* Giới hạn 2 dòng cho tên sản phẩm */
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        height: 2.4em;
    }

    .related-product-price {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1976d2;
        margin: 0;
    }

    @@media (max-width: 768px) {
        .related-products-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .related-products-grid {
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 1rem;
        }

        .related-product-name {
            font-size: 0.9rem;
        }

        .related-product-price {
            font-size: 1rem;
        }
    }

    @@media (max-width: 480px) {
        .related-products-grid

    {
        grid-template-columns: repeat(1, 1fr);
    }

    }
</style>

<script>
    function incrementQuantity() {
        const input = document.getElementById('quantity');
        const currentValue = parseInt(input.value);
        if (currentValue < 99) {  // Giới hạn tối đa 99 sản phẩm
            input.value = currentValue + 1;
        }
    }

    function decrementQuantity() {
        const input = document.getElementById('quantity');
        const currentValue = parseInt(input.value);
        if (currentValue > 1) {
            input.value = currentValue - 1;
        }
    }

    // Validation khi submit form
    document.querySelector('.purchase-form').addEventListener('submit', function (e) {
        const quantityInput = document.getElementById('quantity');
        const quantity = parseInt(quantityInput.value);

        if (quantity < 1) {
            e.preventDefault();
            alert('Số lượng phải lớn hơn 0!');
        } else if (quantity > 99) {
            e.preventDefault();
            alert('Số lượng không được vượt quá 99!');
        }
    });

    $(document).ready(function () {
        $('#addToCartForm').on('submit', function (e) {
            e.preventDefault();

            var productId = $('input[name="ProductID"]').val();
            var quantity = $('#quantity').val();

            $.ajax({
                url: '/Cart?handler=AddToCart',
                type: 'GET',
                data: {
                    ProductID: productId,
                    Quantity: quantity
                },
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra khi thêm vào giỏ hàng');
                }
            });
        });
    });
</script>